{"version":3,"sources":["components/Header.jsx","components/ToDoList.jsx","App.js","serviceWorker.js","index.js"],"names":["library","add","faThumbtack","Header","react_default","a","createElement","className","react_fontawesome_index_es","icon","Component","ToDoList","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","displayInputHandler","setState","displayInput","addNewTask","state","taskInput","length","temporaryTasksList","tasksList","biggestNumber","sort","b","id","push","description","removeTask","element","result","index","animationTrigger","disableButton","setTimeout","splice","pop","removeLatestTask","animated","clearList","forEach","el","completeTask","e","indexOfObject","findIndex","x","parseInt","target","getAttribute","taskInputHandler","value","RejectTask","undefined","_this2","onClick","style","display","placeholder","onChange","map","key","animation","concat","src","alt","itemID","App","src_components_Header","src_components_ToDoList","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qUAKAA,IAAQC,IAAIC,SAoBGC,mLAhBb,OACCC,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,cACCF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACCC,KAAK,YACLF,UAAU,mBAHZ,uBALgBG,aCoJNC,qBAvJd,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACbC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAkBDI,oBAAsB,WACrBP,EAAKQ,SAAS,CACbC,cAAc,KArBFT,EAyBdU,WAAa,WACZ,GAAIV,EAAKW,MAAMC,UAAUC,OAAS,EAAG,CACpC,IAAIC,EAAqBd,EAAKW,MAAMI,UAChCC,EAAgBF,EAAmBG,KAAK,SAACxB,EAAGyB,GAAJ,OAAWzB,EAAE0B,GAAKD,EAAEC,GAAM,EAAMD,EAAEC,GAAK1B,EAAE0B,IAAO,EAAI,IAChGL,EAAmBM,KAAK,CACvBD,GAAkC,IAA9BL,EAAmBD,OAAe,EAAIG,EAAcF,EAAmBD,OAAS,GAAGM,GAAK,EAC5FE,YAAarB,EAAKW,MAAMC,YAEzBZ,EAAKQ,SAAS,CACbO,UAAWD,EACXL,cAAc,EACdG,UAAW,OApCAZ,EAyCdsB,WAAa,SAACC,EAASC,EAAQC,GAEf,cAAXD,IACHxB,EAAKQ,SAAS,CACbO,UAAWQ,EACXG,iBAAkB,4BAClBC,eAAe,IAEhBC,WAAW,WACVL,EAAQM,OAAOJ,EAAO,GACtBzB,EAAKQ,SAAS,CACbO,UAAWQ,EACXI,eAAe,KAEd,MAGC3B,EAAKW,MAAMgB,eAA4B,WAAXH,IAChCxB,EAAKQ,SAAS,CACbO,UAAWQ,EACXG,iBAAkB,0BAClBC,eAAe,IAEhBC,WAAW,WACVL,EAAQO,MACR9B,EAAKQ,SAAS,CACbO,UAAWQ,EACXI,eAAe,KAEd,OAtES3B,EA0Ed+B,iBAAmB,WAClB,GAAI/B,EAAKW,MAAMI,UAAUF,OAAS,EAAG,CACpC,IAAIC,EAAqBd,EAAKW,MAAMI,UACpCD,EAAmBA,EAAmBD,OAAS,GAAGmB,UAAW,EAC7DhC,EAAKsB,WAAWR,EAAoB,YA9ExBd,EAkFdiC,UAAY,WACXjC,EAAKW,MAAMI,UAAUmB,QAAQ,SAACC,GAC7BA,EAAGH,UAAW,EACdhC,EAAKsB,WAAWtB,EAAKW,MAAMI,UAAW,aArF1Bf,EAyFdoC,aAAe,SAACC,GACf,IAAIvB,EAAqBd,EAAKW,MAAMI,UAChCuB,EAAgBxB,EAAmByB,UAAU,SAAAC,GAAC,OAAIA,EAAErB,KAAOsB,SAASJ,EAAEK,OAAOC,aAAa,aAC9F7B,EAAmBwB,GAAeN,UAAW,EAC7ChC,EAAKsB,WAAWR,EAAoB,YAAawB,IA7FpCtC,EAgGd4C,iBAAmB,SAACP,GACnBrC,EAAKQ,SAAS,CACbI,UAAWyB,EAAEK,OAAOG,SAlGR7C,EAsGd8C,WAAa,WACZ9C,EAAKQ,SAAS,CACbC,cAAc,EACdG,UAAW,MAvGZZ,EAAKW,MAAQ,CACZI,UAAW,CACV,CACCI,GAAI,EACJE,YAAa,WAEd,CACCF,GAAI,EACJE,YAAa,YAGfK,sBAAkBqB,EAClBnC,UAAW,GACXH,cAAc,GAfFT,wEA+GL,IAAAgD,EAAA7C,KACR,OACCX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACdH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,qBAAqBsD,QAAS9C,KAAKI,qBAArD,OACAf,EAAAC,EAAAC,cAAA,UAAQC,UAAU,wBAAwBsD,QAAS9C,KAAK4B,kBAAxD,UACAvC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uBAAuBsD,QAAS9C,KAAK8B,WAAvD,UAEDzC,EAAAC,EAAAC,cAAA,OAAKwD,MAAO,CAAEC,QAAShD,KAAKQ,MAAMF,aAAe,QAAU,QAAUd,UAAU,iBAC9EH,EAAAC,EAAAC,cAAA,YAAUmD,MAAO1C,KAAKQ,MAAMC,UAAWwC,YAAY,yBAAyBzD,UAAU,aAAa0D,SAAUlD,KAAKyC,mBAElHpD,EAAAC,EAAAC,cAAA,UAAQuD,QAAS9C,KAAKO,WAAYf,UAAU,sBAA5C,eACAH,EAAAC,EAAAC,cAAA,UAAQuD,QAAS9C,KAAK2C,WAAYnD,UAAU,yBAA5C,WAEDH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACZQ,KAAKQ,MAAMI,UAAUuC,IAAI,SAACnB,GAC1B,OACC3C,EAAAC,EAAAC,cAAA,MACC6D,IAAKpB,EAAGhB,GACRxB,UAAU,YACVuD,MAAO,CAAEM,YAAWrB,EAAGH,UAAH,GAAAyB,OAAiBT,EAAKrC,MAAMe,oBAEhDlC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACd+D,IAAI,0EACJC,IAAI,QACJC,OAAQzB,EAAGhB,GACX8B,QAASD,EAAKZ,eALhB,KAMMD,EAAGhB,IAET3B,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAAoBwC,EAAGd,yBA9IrBvB,cCuBR+D,qBAnBb,SAAAA,IAAe,OAAA5D,OAAAC,EAAA,EAAAD,CAAAE,KAAA0D,GAAA5D,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4D,GAAAvD,KAAAH,6EAQb,OACEX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACoE,EAAD,MACAtE,EAAAC,EAAAC,cAACqE,EAAD,eAbQjE,cCMEkE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO9E,EAAAC,EAAAC,cAAC6E,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.66270d54.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faThumbtack } from '@fortawesome/free-solid-svg-icons'\nimport './Header.css';\nlibrary.add(faThumbtack)\n\nclass Header extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<header>\n\t\t\t\t\t<h1 className=\"title\">\n\t\t\t\t\t\t<FontAwesomeIcon\n\t\t\t\t\t\t\ticon=\"thumbtack\"\n\t\t\t\t\t\t\tclassName=\"fas thumbstack\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\tMyTodoList\n            </h1>\n\t\t\t\t</header>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport './ToDoList.css';\n\nclass ToDoList extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\ttasksList: [\n\t\t\t\t{\n\t\t\t\t\tid: 1,\n\t\t\t\t\tdescription: \"Laundry\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 2,\n\t\t\t\t\tdescription: \"Jogging\"\n\t\t\t\t}\n\t\t\t],\n\t\t\tanimationTrigger: undefined,\n\t\t\ttaskInput: '',\n\t\t\tdisplayInput: false\n\t\t}\n\t}\n\n\tdisplayInputHandler = () => {\n\t\tthis.setState({\n\t\t\tdisplayInput: true\n\t\t})\n\t}\n\n\taddNewTask = () => {\n\t\tif (this.state.taskInput.length > 0) {\n\t\t\tlet temporaryTasksList = this.state.tasksList;\n\t\t\tlet biggestNumber = temporaryTasksList.sort((a, b) => (a.id > b.id) ? 1 : ((b.id > a.id) ? -1 : 0))\n\t\t\ttemporaryTasksList.push({\n\t\t\t\tid: temporaryTasksList.length === 0 ? 1 : biggestNumber[temporaryTasksList.length - 1].id + 1,\n\t\t\t\tdescription: this.state.taskInput\n\t\t\t})\n\t\t\tthis.setState({\n\t\t\t\ttasksList: temporaryTasksList,\n\t\t\t\tdisplayInput: false,\n\t\t\t\ttaskInput: ''\n\t\t\t})\n\t\t}\n\t}\n\n\tremoveTask = (element, result, index) => {\n\n\t\tif (result === 'completed') {\n\t\t\tthis.setState({\n\t\t\t\ttasksList: element,\n\t\t\t\tanimationTrigger: \"TaskCompleted 1s forwards\",\n\t\t\t\tdisableButton: true\n\t\t\t})\n\t\t\tsetTimeout(() => {\n\t\t\t\telement.splice(index, 1)\n\t\t\t\tthis.setState({\n\t\t\t\t\ttasksList: element,\n\t\t\t\t\tdisableButton: false\n\t\t\t\t})\n\t\t\t}, 1000);\n\t\t}\n\n\t\tif (!this.state.disableButton && result === \"remove\") {\n\t\t\tthis.setState({\n\t\t\t\ttasksList: element,\n\t\t\t\tanimationTrigger: \"TaskRemoved 1s forwards\",\n\t\t\t\tdisableButton: true\n\t\t\t})\n\t\t\tsetTimeout(() => {\n\t\t\t\telement.pop()\n\t\t\t\tthis.setState({\n\t\t\t\t\ttasksList: element,\n\t\t\t\t\tdisableButton: false\n\t\t\t\t})\n\t\t\t}, 1000);\n\t\t}\n\t}\n\n\tremoveLatestTask = () => {\n\t\tif (this.state.tasksList.length > 0) {\n\t\t\tlet temporaryTasksList = this.state.tasksList\n\t\t\ttemporaryTasksList[temporaryTasksList.length - 1].animated = true;\n\t\t\tthis.removeTask(temporaryTasksList, \"remove\")\n\t\t}\n\t}\n\n\tclearList = () => {\n\t\tthis.state.tasksList.forEach((el) => {\n\t\t\tel.animated = true;\n\t\t\tthis.removeTask(this.state.tasksList, \"remove\")\n\t\t})\n\t}\n\n\tcompleteTask = (e) => {\n\t\tlet temporaryTasksList = this.state.tasksList\n\t\tlet indexOfObject = temporaryTasksList.findIndex(x => x.id === parseInt(e.target.getAttribute('itemID')))\n\t\ttemporaryTasksList[indexOfObject].animated = true;\n\t\tthis.removeTask(temporaryTasksList, \"completed\", indexOfObject)\n\t}\n\n\ttaskInputHandler = (e) => {\n\t\tthis.setState({\n\t\t\ttaskInput: e.target.value\n\t\t})\n\t}\n\n\tRejectTask = () => {\n\t\tthis.setState({\n\t\t\tdisplayInput: false,\n\t\t\ttaskInput: ''\n\t\t})\n\t}\n\n\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"list-wrapper\">\n\t\t\t\t<div className=\"control-bar\">\n\t\t\t\t\t<button className=\"control-button add\" onClick={this.displayInputHandler}>Add</button>\n\t\t\t\t\t<button className=\"control-button remove\" onClick={this.removeLatestTask}>Remove</button>\n\t\t\t\t\t<button className=\"control-button clear\" onClick={this.clearList}>Clear</button>\n\t\t\t\t</div>\n\t\t\t\t<div style={{ display: this.state.displayInput ? \"block\" : \"none\" }} className=\"new-task-form\">\n\t\t\t\t\t<textarea value={this.state.taskInput} placeholder=\"Enter task description\" className=\"task-input\" onChange={this.taskInputHandler}>\n\t\t\t\t\t</textarea>\n\t\t\t\t\t<button onClick={this.addNewTask} className='control-button add'>Add to list</button>\n\t\t\t\t\t<button onClick={this.RejectTask} className='control-button remove'>Reject</button>\n\t\t\t\t</div>\n\t\t\t\t<ul className=\"tasks-list\">\n\t\t\t\t\t{this.state.tasksList.map((el) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\tkey={el.id}\n\t\t\t\t\t\t\t\tclassName=\"task-item\"\n\t\t\t\t\t\t\t\tstyle={{ animation: el.animated ? `${this.state.animationTrigger}` : false }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div className=\"task-number\">\n\t\t\t\t\t\t\t\t\t<img className=\"check-button\"\n\t\t\t\t\t\t\t\t\t\tsrc=\"https://cdn.pixabay.com/photo/2013/07/12/17/00/approved-151676__340.png\"\n\t\t\t\t\t\t\t\t\t\talt=\"check\"\n\t\t\t\t\t\t\t\t\t\titemID={el.id}\n\t\t\t\t\t\t\t\t\t\tonClick={this.completeTask}\n\t\t\t\t\t\t\t\t\t/> #{el.id}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<p className=\"task-description\">{el.description}</p>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default ToDoList;\n","import React, { Component } from 'react';\nimport Header from './components/Header'\nimport ToDoList from './components/ToDoList'\nimport './App.css';\n\n\nclass App extends Component {\n  constructor() {\n    super();\n  }\n\n\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <Header />\n          <ToDoList />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}